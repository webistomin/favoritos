// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Favoritos: drawCircleBadge method correctly calculate final badge height 1`] = `
Array [
  Object {
    "props": Object {
      "value": "18px Helvetica, Arial, sans-serif",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "font",
  },
  Object {
    "props": Object {
      "value": "center",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textAlign",
  },
  Object {
    "props": Object {
      "value": "middle",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textBaseline",
  },
  Object {
    "props": Object {
      "x": 1,
      "y": 1,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "scale",
  },
  Object {
    "props": Object {
      "anticlockwise": false,
      "endAngle": 6.283185307179586,
      "radius": 16,
      "startAngle": 0,
      "x": 16,
      "y": 0,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "arc",
  },
  Object {
    "props": Object {
      "anticlockwise": false,
      "endAngle": 6.283185307179586,
      "radius": 16,
      "startAngle": 0,
      "x": 16,
      "y": 0,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "arc",
  },
]
`;

exports[`Favoritos: drawCircleBadge method correctly calculate final badge width if text width more than badge min width 1`] = `
Array [
  Object {
    "props": Object {
      "value": "18px Helvetica, Arial, sans-serif",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "font",
  },
  Object {
    "props": Object {
      "value": "center",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textAlign",
  },
  Object {
    "props": Object {
      "value": "middle",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textBaseline",
  },
  Object {
    "props": Object {
      "x": 1,
      "y": 1,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "scale",
  },
  Object {
    "props": Object {
      "anticlockwise": false,
      "endAngle": 6.283185307179586,
      "radius": 11.5,
      "startAngle": 0,
      "x": 20.5,
      "y": 21,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "arc",
  },
  Object {
    "props": Object {
      "anticlockwise": false,
      "endAngle": 6.283185307179586,
      "radius": 11.5,
      "startAngle": 0,
      "x": 20.5,
      "y": 21,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "arc",
  },
]
`;

exports[`Favoritos: drawCircleBadge method correctly calculate final badge width with huge text width 1`] = `
Array [
  Object {
    "props": Object {
      "value": "18px Helvetica, Arial, sans-serif",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "font",
  },
  Object {
    "props": Object {
      "value": "center",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textAlign",
  },
  Object {
    "props": Object {
      "value": "middle",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textBaseline",
  },
  Object {
    "props": Object {
      "x": 1,
      "y": 1,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "scale",
  },
  Object {
    "props": Object {
      "anticlockwise": false,
      "endAngle": 6.283185307179586,
      "radius": 16,
      "startAngle": 0,
      "x": 16,
      "y": 21,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "arc",
  },
  Object {
    "props": Object {
      "anticlockwise": false,
      "endAngle": 6.283185307179586,
      "radius": 16,
      "startAngle": 0,
      "x": 16,
      "y": 21,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "arc",
  },
]
`;

exports[`Favoritos: drawCircleBadge method draw circle badge if params are correct 1`] = `
Array [
  Object {
    "props": Object {
      "value": "18px Helvetica, Arial, sans-serif",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "font",
  },
  Object {
    "props": Object {
      "value": "center",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textAlign",
  },
  Object {
    "props": Object {
      "value": "middle",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textBaseline",
  },
  Object {
    "props": Object {
      "x": 1,
      "y": 1,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "scale",
  },
  Object {
    "props": Object {
      "anticlockwise": false,
      "endAngle": 6.283185307179586,
      "radius": 11,
      "startAngle": 0,
      "x": 21,
      "y": 21,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "arc",
  },
  Object {
    "props": Object {
      "anticlockwise": false,
      "endAngle": 6.283185307179586,
      "radius": 11,
      "startAngle": 0,
      "x": 21,
      "y": 21,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "arc",
  },
]
`;

exports[`Favoritos: drawCircleBadge method draw rounded rectangle if value is number and more or equal 10 1`] = `
Array [
  Object {
    "props": Object {
      "value": "18px Helvetica, Arial, sans-serif",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "font",
  },
  Object {
    "props": Object {
      "value": "center",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textAlign",
  },
  Object {
    "props": Object {
      "value": "middle",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textBaseline",
  },
  Object {
    "props": Object {
      "x": 1,
      "y": 1,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "scale",
  },
  Object {
    "props": Object {
      "value": "#d21f3c",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "strokeStyle",
  },
  Object {
    "props": Object {
      "value": "round",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineJoin",
  },
  Object {
    "props": Object {
      "value": 10,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineWidth",
  },
  Object {
    "props": Object {
      "height": 54,
      "width": 22,
      "x": 5,
      "y": -27,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "strokeRect",
  },
  Object {
    "props": Object {
      "height": 54,
      "width": 22,
      "x": 5,
      "y": -27,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "fillRect",
  },
  Object {
    "props": Object {
      "path": Array [
        Object {
          "props": Object {},
          "transform": Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ],
          "type": "beginPath",
        },
      ],
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "stroke",
  },
  Object {
    "props": Object {
      "fillRule": "nonzero",
      "path": Array [
        Object {
          "props": Object {},
          "transform": Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ],
          "type": "beginPath",
        },
      ],
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "fill",
  },
  Object {
    "props": Object {
      "value": "#d21f3c",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "strokeStyle",
  },
  Object {
    "props": Object {
      "value": "round",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineJoin",
  },
  Object {
    "props": Object {
      "value": 10,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineWidth",
  },
  Object {
    "props": Object {
      "height": 54,
      "width": 22,
      "x": 5,
      "y": -27,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "strokeRect",
  },
  Object {
    "props": Object {
      "height": 54,
      "width": 22,
      "x": 5,
      "y": -27,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "fillRect",
  },
  Object {
    "props": Object {
      "path": Array [
        Object {
          "props": Object {},
          "transform": Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ],
          "type": "beginPath",
        },
      ],
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "stroke",
  },
  Object {
    "props": Object {
      "fillRule": "nonzero",
      "path": Array [
        Object {
          "props": Object {},
          "transform": Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ],
          "type": "beginPath",
        },
      ],
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "fill",
  },
]
`;

exports[`Favoritos: drawCircleBadge method draw rounded rectangle if value is string and string length more or equal 1 1`] = `
Array [
  Object {
    "props": Object {
      "value": "18px Helvetica, Arial, sans-serif",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "font",
  },
  Object {
    "props": Object {
      "value": "center",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textAlign",
  },
  Object {
    "props": Object {
      "value": "middle",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "textBaseline",
  },
  Object {
    "props": Object {
      "x": 1,
      "y": 1,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "scale",
  },
  Object {
    "props": Object {
      "value": "#d21f3c",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "strokeStyle",
  },
  Object {
    "props": Object {
      "value": "round",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineJoin",
  },
  Object {
    "props": Object {
      "value": 10,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineWidth",
  },
  Object {
    "props": Object {
      "height": 54,
      "width": 22,
      "x": 5,
      "y": -27,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "strokeRect",
  },
  Object {
    "props": Object {
      "height": 54,
      "width": 22,
      "x": 5,
      "y": -27,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "fillRect",
  },
  Object {
    "props": Object {
      "path": Array [
        Object {
          "props": Object {},
          "transform": Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ],
          "type": "beginPath",
        },
      ],
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "stroke",
  },
  Object {
    "props": Object {
      "fillRule": "nonzero",
      "path": Array [
        Object {
          "props": Object {},
          "transform": Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ],
          "type": "beginPath",
        },
      ],
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "fill",
  },
  Object {
    "props": Object {
      "value": "#d21f3c",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "strokeStyle",
  },
  Object {
    "props": Object {
      "value": "round",
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineJoin",
  },
  Object {
    "props": Object {
      "value": 10,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineWidth",
  },
  Object {
    "props": Object {
      "height": 54,
      "width": 22,
      "x": 5,
      "y": -27,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "strokeRect",
  },
  Object {
    "props": Object {
      "height": 54,
      "width": 22,
      "x": 5,
      "y": -27,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "fillRect",
  },
  Object {
    "props": Object {
      "path": Array [
        Object {
          "props": Object {},
          "transform": Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ],
          "type": "beginPath",
        },
      ],
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "stroke",
  },
  Object {
    "props": Object {
      "fillRule": "nonzero",
      "path": Array [
        Object {
          "props": Object {},
          "transform": Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ],
          "type": "beginPath",
        },
      ],
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "fill",
  },
]
`;
